<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.robot.mapper.RobotGroupMapper">
    
    <resultMap type="com.yh.robot.domain.RobotGroup" id="RobotGroupResult">
        <result property="id"    column="id"    />
        <result property="groupId"    column="group_id"    />
        <result property="groupName"    column="group_name"    />
        <result property="groupMemo"    column="group_memo"    />
        <result property="groupCreateTime"    column="group_create_time"    />
        <result property="selfId"    column="self_id"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectRobotGroupVo">
        select id, group_id, group_name, group_memo, group_create_time, self_id, status, create_time, update_time from robot_group
    </sql>

    <select id="selectRobotGroupList" parameterType="com.yh.robot.domain.RobotGroup" resultMap="RobotGroupResult">
        <include refid="selectRobotGroupVo"/>
        <where>  
            <if test="groupId != null "> and group_id = #{groupId}</if>
            <if test="groupName != null  and groupName != ''"> and group_name like concat('%', #{groupName}, '%')</if>
            <if test="groupMemo != null  and groupMemo != ''"> and group_memo = #{groupMemo}</if>
            <if test="groupCreateTime != null "> and group_create_time = #{groupCreateTime}</if>
            <if test="selfId != null "> and self_id = #{selfId}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
        order by create_time desc
    </select>
    
    <select id="selectRobotGroupById" parameterType="Long" resultMap="RobotGroupResult">
        <include refid="selectRobotGroupVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertRobotGroup" parameterType="com.yh.robot.domain.RobotGroup">
        insert into robot_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="groupId != null">group_id,</if>
            <if test="groupName != null">group_name,</if>
            <if test="groupMemo != null">group_memo,</if>
            <if test="groupCreateTime != null">group_create_time,</if>
            <if test="selfId != null">self_id,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="groupId != null">#{groupId},</if>
            <if test="groupName != null">#{groupName},</if>
            <if test="groupMemo != null">#{groupMemo},</if>
            <if test="groupCreateTime != null">#{groupCreateTime},</if>
            <if test="selfId != null">#{selfId},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateRobotGroup" parameterType="com.yh.robot.domain.RobotGroup">
        update robot_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="groupMemo != null">group_memo = #{groupMemo},</if>
            <if test="groupCreateTime != null">group_create_time = #{groupCreateTime},</if>
            <if test="selfId != null">self_id = #{selfId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRobotGroupById" parameterType="Long">
        delete from robot_group where id = #{id}
    </delete>

    <delete id="deleteRobotGroupByIds" parameterType="String">
        delete from robot_group where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>