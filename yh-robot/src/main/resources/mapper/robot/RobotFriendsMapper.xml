<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.robot.mapper.RobotFriendsMapper">

    <resultMap type="com.yh.robot.domain.RobotFriends" id="RobotFriendsResult">
        <result property="id"    column="id"    />
        <result property="qq"    column="qq"    />
        <result property="nickname"    column="nickname"    />
        <result property="remake"    column="remake"    />
        <result property="selfId"    column="self_id"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectRobotFriendsVo">
        select id, qq, nickname, remake, self_id, status, create_time, update_time from robot_friends
    </sql>

    <select id="selectRobotFriendsList" parameterType="com.yh.robot.domain.RobotFriends" resultMap="RobotFriendsResult">
        <include refid="selectRobotFriendsVo"/>
        <where>
            <if test="qq != null "> and qq = #{qq}</if>
            <if test="nickname != null  and nickname != ''"> and nickname like concat('%', #{nickname}, '%')</if>
            <if test="remake != null  and remake != ''"> and remake = #{remake}</if>
            <if test="selfId != null "> and self_id = #{selfId}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
        order by create_time desc
    </select>

    <select id="selectRobotFriendsById" parameterType="Long" resultMap="RobotFriendsResult">
        <include refid="selectRobotFriendsVo"/>
        where id = #{id}
    </select>

    <insert id="insertRobotFriends" parameterType="com.yh.robot.domain.RobotFriends" useGeneratedKeys="true" keyProperty="id">
        insert into robot_friends
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="qq != null">qq,</if>
            <if test="nickname != null">nickname,</if>
            <if test="remake != null">remake,</if>
            <if test="selfId != null">self_id,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="qq != null">#{qq},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="remake != null">#{remake},</if>
            <if test="selfId != null">#{selfId},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateRobotFriends" parameterType="com.yh.robot.domain.RobotFriends">
        update robot_friends
        <trim prefix="SET" suffixOverrides=",">
            <if test="qq != null">qq = #{qq},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="remake != null">remake = #{remake},</if>
            <if test="selfId != null">self_id = #{selfId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRobotFriendsById" parameterType="Long">
        delete from robot_friends where id = #{id}
    </delete>

    <delete id="deleteRobotFriendsByIds" parameterType="String">
        delete from robot_friends where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>